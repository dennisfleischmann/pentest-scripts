import socket
import sys

def scan_port(ip, port, open_ports):
    """
    Attempts to connect to the specified IP address and port.
    If the connection is successful, the port is considered open.
    """
    try:
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as sock:
            sock.settimeout(0.01)  # Set a timeout for the socket to 10 ms
            result = sock.connect_ex((ip, port))
            if result == 0:
                open_ports.append(port)
    except socket.error:
        pass  # Silently ignore errors

def scan_ports(ip, start_port, end_port):
    """
    Scans ports in the specified range for the given IP address sequentially.
    """
    open_ports = []  # List to keep track of open ports
    for port in range(start_port, end_port + 1):
        print(f"\rScanning port: {port}    ", end='')
        sys.stdout.flush()  # Ensure the print statement is output immediately
        scan_port(ip, port, open_ports)
    print(f"\rOpen ports: {', '.join(map(str, open_ports))}          ")

if __name__ == "__main__":
    if len(sys.argv) < 4:
        print("Usage: python script.py <IP> <Start_Port> <End_Port>")
        sys.exit()

    target_ip = sys.argv[1]
    start_port = int(sys.argv[2])
    end_port = int(sys.argv[3])

    scan_ports(target_ip, start_port, end_port)
